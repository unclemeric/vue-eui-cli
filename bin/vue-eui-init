#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const exists = require('fs').existsSync
const program = require('commander')
const chalk = require('chalk')
const inquirer = require('inquirer')
const home = require('user-home')
const rm = require('rimraf').sync
const QueueCmd = require('node.cmd').QueueCmd

const dirTemplates = path.join(home, '.vue-eui-template')

program
  .usage('<command> [options]')
  .option('-a, --auth', 'create auth template')
  .parse(process.argv)

const config = {}
process.argv.slice(2).forEach((item, i) => {
  switch (item) {
    case '-a':
    case '--auth':
      config.auth = true
      break
  }
})
program.parse(process.argv)
const rawName = program.args[0]
const isCurrentDir = !rawName || rawName === '.' || rawName === './'
const projectName = isCurrentDir ? path.relative('../', process.cwd()) : rawName
const to = path.resolve(projectName || '.')
const copyTemplate = function(from, to) {
  write(to, fs.readFileSync(path.resolve(from), 'utf-8'))
}

const write = function(path, str) {
  str = str.replace(/element-ui-admin-template/g, projectName)
  str = str.replace(/element-ui-admin-auth-template/g, projectName)
  fs.writeFileSync(path, str)
}

const mkdir = function(path) {
  if (!fs.existsSync(path)) {
    fs.mkdirSync(path)
  }
}

const generate = function(cachePath, toPath) {
  var files = fs.readdirSync(cachePath) // 读取模板文件
  files.forEach(function(file) {
    if (['.history', 'node_modules', 'dist', '.lock', '.log', '.git'].indexOf(file) !== -1) {
      return false
    }
    if (fs.statSync(cachePath + '/' + file).isFile()) {
      if (!fs.existsSync(toPath)) {
        fs.mkdirSync(toPath)
      }
      copyTemplate(cachePath + '/' + file, toPath + '/' + file)
    } else if (fs.statSync(cachePath + '/' + file).isDirectory()) {
      var filePath = toPath + '/' + file
      mkdir(filePath)
      generate(cachePath + '/' + file, filePath)
    }
  })
}

const run = function() {
  if (exists(to)) {
    inquirer
      .prompt([
        {
          type: 'confirm',
          message: isCurrentDir ? 'Generate project in current directory?' : 'Target directory exists, Continue?',
          name: 'continue'
        }
      ])
      .then(answers => {
        if (answers.continue) {
          generate(dirTemplates, to)
          console.log(chalk.green('项目新建成功！'))
        }
      })
      .catch(function(err) {
        console.error(chalk.red(err))
      })
    // cmd.run(`mkdir ${home}/vue-eui-template`, function(err, data) {
  } else {
    generate(dirTemplates, to)
    console.log(chalk.green('项目新建成功！'))
  }
}

if (exists(dirTemplates)) {
  rm(dirTemplates)
} else {
  mkdir(dirTemplates)
}
const ins = new QueueCmd()
ins.queue(
  `git clone ${
    config.auth
      ? 'ssh://git@10.0.82.224:2222/hwagain-FE/element-ui-admin-auth-template.git'
      : 'ssh://git@10.0.82.224:2222/hwagain-FE/element-ui-admin-template.git'
  } ${dirTemplates}`,
  function(data) {
    run()
  }
)
