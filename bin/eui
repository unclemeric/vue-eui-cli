#!/usr/bin/env node
const fs = require('fs')
const rm = require('rimraf').sync
const path = require('path')
const program = require('commander')
const chalk = require('chalk')
const home = require('user-home')
const { getopt } = require('stdio')
const createProject = require('../lib/create')
const commonUtil = require('../lib/common')
const dirTemplates = path.join(home, '.vue-eui-template')
const dirAuthTemplates = path.join(home, '.vue-eui-auth-template')

program
  .version(require('../package').version)
  .usage('[options] <app-name>')
  .option('-a', '创建一个带权限的项目模板')
  .option('-c', '使用上次使用过的模板(默认拉取最新模板)')
  .option('-z', '项目中文名称')
  // .command('<app-name>', 'create a new project powered by vue-eui-cli')
  .on('--help', () => {
    console.log(' Examples:')
    console.log(chalk.green('   $ eui <app-name> \t\t\t\t  创建一个普通模板'))
    console.log(chalk.green('   $ eui <app-name> -a \t\t\t\t  创建一个带权限模板'))
    console.log(chalk.green('   $ eui <app-name> -c \t\t\t\t  使用上次拉取的模板'))
    console.log(chalk.green('   $ eui <app-name> -z 华劲后台管理系统 \t  设置系统中文名称'))
  })
  .parse(process.argv)

// var ops = stdio.getopt({
//   'check': {key: 'c', args: 2, description: 'What this option means'},
//   'map': {key: 'm', description: 'Another description'},
//   'kaka': {args: 1, mandatory: true},
//   'ooo': {key: 'o'}
// });
// node <your_script.js> -c 23 45 --map -k 23 file1 file2
// 输出
// { check: [ '23', '45' ],
//   args: [ 'file1', 'file2' ],
//   map: true,
//   kaka: '23' }

const options = getopt({
  auth: { key: 'a', description: '创建一个带权限的项目模板' },
  useCache: { key: 'c', description: '使用上次使用过的模板' },
  cnName: { key: 'z', args: 1, description: '项目中文名称' }
})
let projectName = options.args ? options.args[0] : ''
let tempPath = options.auth ? dirAuthTemplates : dirTemplates
if (fs.existsSync(tempPath)) {
  console.log(chalk.green('模板已存在...'))
  if (!options.useCache) {
    console.log(chalk.green('不使用缓存模板，正在删除模板...'))
    rm(tempPath)
    commonUtil.mkdir(tempPath)
    console.log(chalk.green('准备重新下载模板...'))
    commonUtil.pullTemplate(projectName, tempPath, options)
  } else {
    console.log(chalk.green('正在使用缓存模板创建项目...'))
    createProject(projectName, tempPath)
  }
} else {
  console.log(chalk.green('模板不存在,准备拉取git模板...'))
  commonUtil.mkdir(tempPath)
  commonUtil.pullTemplate(projectName, tempPath, options)
}
